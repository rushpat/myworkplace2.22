{"version":3,"sources":["modules/RTCModule.js","config.js","modules/FirebaseModule.js","VideoChat.js","VideoChatContainer.js","App.js","serviceWorker.js","index.js"],"names":["createOffer","connection","localStream","userToCall","doOffer","database","username","a","console","log","addStream","offer","setLocalDescription","error","initiateLocalStream","navigator","mediaDevices","getUserMedia","video","audio","stream","initiateConnection","configuration2","iceServers","urls","configuration3","configuration4","conn1","RTCPeerConnection","conn2","conn3","conn4","conn","listenToConnectionEvents","remoteUsername","remoteVideoRef","doCandidate","onicecandidate","event","candidate","ontrack","e","srcObject","streams","sendAnswer","notif","doAnswer","JSON","parse","setRemoteDescription","createAnswer","answer","from","startCall","yourConn","addCandidate","addIceCandidate","RTCIceCandidate","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","doLogin","handleUpdate","ref","remove","on","snapshot","exists","val","removeNotifs","connectedUser","to","set","type","stringify","update","VideoChat","props","componentDidMount","setState","isLoggedIn","renderVideos","className","classnames","active","state","setLocalVideoRef","autoPlay","playsInline","setRemoteVideoRef","connectedUser2","setRemoteVideoRef2","renderForms","key","value","onChange","target","onClick","onStartCallClicked","id","team","this","React","Component","VideoChatContainer","localStream1","localStream2","localStream3","localStream4","localStreamSet","localConnectionSet","localConnection","counter","localVideoRef","firebase","onLogin","length","calling","remoteVideoRef2","remoteVideoRef3","user","called","substring","connectedUser3","createRef","remoteVideoRef4","nextProps","nextState","prevProps","prevState","localConn","localStr","App","initializeApp","getUserData","writeUserData","rooms","room_users","errData","err","nameNewRoom","enterRoom","room","temp_roomusers","push","ip","findTeam","authenticateUser","constructRoom","temp_rooms","roomuser","leaveRoom","filteredru","filter","index","arr","retreivedData","busy","roomname","fetch","method","headers","then","res","text","rand","Math","floor","random","yip","split","join","once","gotRooms","gotRoomUsers","data","parsed_rooms","Object","keys","map","parsed_roomusers","Fragment","style","width","marginRight","textAlign","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0d277147.chunk.js","sourcesContent":["export const createOffer = async (\n  connection,\n  localStream,\n  userToCall,\n  doOffer,\n  database,\n  username\n) => {\n  console.log(\"In createoffer\");\n  try {\n    console.log(connection);\n    console.log(localStream);\n    connection.addStream(localStream);\n    console.log(\"1\");\n    const offer = await connection.createOffer();\n    console.log(\"2\");\n    await connection.setLocalDescription(offer);\n    console.log(\"3\");\n    doOffer(userToCall, offer, database, username);\n  } catch (exception) {\n    console.error(exception);\n  }\n};\n\nexport const initiateLocalStream = async () => {\n  console.log(\"In initiatelocalstream\");\n  try {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true,\n    });\n    return stream;\n  } catch (exception) {\n    console.error(exception);\n  }\n};\n\nexport const initiateConnection = async () => {\n  console.log(\"In initiateconnection\");\n  try {\n    // using Google public stun server\n    var configuration1 = {\n      iceServers: [{ urls: \"stun:stun1.1.google.com:19302\" }],\n    };\n    var configuration2 = {\n      iceServers: [{ urls: \"stun:stun2.1.google.com:19302\" }],\n    };\n    var configuration3 = {\n      iceServers: [{ urls: \"stun:stun3.1.google.com:19302\" }],\n    };\n    var configuration4 = {\n      iceServers: [{ urls: \"stun:stun4.1.google.com:19302\" }],\n    };\n\n    const conn1 = new RTCPeerConnection(configuration1);\n    const conn2 = new RTCPeerConnection(configuration2);\n    const conn3 = new RTCPeerConnection(configuration3);\n    const conn4 = new RTCPeerConnection(configuration4);\n\n    //const conn = [conn1, conn2, conn3, conn4];\n\n    console.log(conn1);\n    console.log(conn2);\n\n    const conn = [conn1, conn2, conn3, conn4];\n\n    console.log(conn[0]);\n\n    return conn;\n  } catch (exception) {\n    console.error(exception);\n  }\n};\n\nexport const listenToConnectionEvents = (\n  conn,\n  username,\n  remoteUsername,\n  database,\n  remoteVideoRef,\n  doCandidate\n) => {\n  console.log(\"In listentoconnectionevents\");\n  conn.onicecandidate = function (event) {\n    if (event.candidate) {\n      doCandidate(remoteUsername, event.candidate, database, username);\n    }\n  };\n\n  // when a remote user adds stream to the peer connection, we display it\n  conn.ontrack = function (e) {\n    if (remoteVideoRef.srcObject !== e.streams[0]) {\n      remoteVideoRef.srcObject = e.streams[0];\n    }\n  };\n};\n\nexport const sendAnswer = async (\n  conn,\n  localStream,\n  notif,\n  doAnswer,\n  database,\n  username\n) => {\n  console.log(\"In sendanswer\");\n  try {\n    conn.addStream(localStream);\n    console.log(\"1\");\n\n    const offer = JSON.parse(notif.offer);\n    console.log(\"2\");\n    conn.setRemoteDescription(offer);\n    console.log(\"3\");\n\n    // create an answer to an offer\n    const answer = await conn.createAnswer();\n    console.log(\"4\");\n    conn.setLocalDescription(answer);\n    console.log(\"5\");\n\n    doAnswer(notif.from, answer, database, username);\n  } catch (exception) {\n    console.error(exception);\n  }\n};\n\nexport const startCall = (yourConn, notif) => {\n  console.log(\"In startcall\");\n  const answer = JSON.parse(notif.answer);\n  yourConn.setRemoteDescription(answer);\n};\n\nexport const addCandidate = (yourConn, notif) => {\n  console.log(\"In addcandidate\");\n  // apply the new received candidate to the connection\n  const candidate = JSON.parse(notif.candidate);\n  yourConn.addIceCandidate(new RTCIceCandidate(candidate));\n};\n","const config = {\n  apiKey: \"AIzaSyAVOiv8F5oWqs4CL7NlngzE_3XFiSOi5O4\",\n  authDomain: \"workplace-app-fb.firebaseapp.com\",\n  databaseURL: \"https://workplace-app-fb-default-rtdb.firebaseio.com\",\n  projectId: \"workplace-app-fb\",\n  storageBucket: \"workplace-app-fb.appspot.com\",\n  messagingSenderId: \"324667218234\",\n  appId: \"1:324667218234:web:70a04ff69590074e245803\",\n};\n\nexport default config;\n","export const doLogin = async (username, database, handleUpdate) => {\n  console.log(\"In doLogin\");\n  await database.ref(\"/notifs/\" + username).remove();\n  database.ref(\"/notifs/\" + username).on(\"value\", (snapshot) => {\n    snapshot.exists() && handleUpdate(snapshot.val(), username);\n  });\n};\n\nexport const removeNotifs = async (database, username, connectedUser) => {\n  console.log(\"In removenotifs\");\n  await database.ref(\"/notifs/\" + username).remove();\n  await database.ref(\"/notifs/\" + connectedUser).remove();\n};\n\nexport const doOffer = async (to, offer, database, username) => {\n  console.log(\"In doOffer\");\n  await database.ref(\"/notifs/\" + to).set({\n    type: \"offer\",\n    from: username,\n    offer: JSON.stringify(offer),\n  });\n};\n\nexport const doAnswer = async (to, answer, database, username) => {\n  console.log(\"In doAnswer\");\n  await database.ref(\"/notifs/\" + to).update({\n    type: \"answer\",\n    from: username,\n    answer: JSON.stringify(answer),\n  });\n};\n\nexport const doLeaveNotif = async (to, database, username) => {\n  console.log(\"In doLeaveNotif\");\n  await database.ref(\"/notifs/\" + to).update({\n    type: \"leave\",\n    from: username,\n  });\n};\n\nexport const doCandidate = async (to, candidate, database, username) => {\n  console.log(\"In docandidate\");\n  // send the new candiate to the peer\n  await database.ref(\"/notifs/\" + to).update({\n    type: \"candidate\",\n    from: username,\n    candidate: JSON.stringify(candidate),\n  });\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport \"firebase/database\";\nimport classnames from \"classnames\";\n\nexport default class VideoChat extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoggedIn: false,\n      userToCall: null,\n      username: this.props.username,\n      team: this.props.team,\n    };\n\n    console.log(this.state.username);\n  }\n\n  componentDidMount = async () => {\n    console.log(\"In component did mount\");\n    this.setState({\n      isLoggedIn: true,\n    });\n  };\n\n  //onLoginClicked = async () => {\n  //  await this.props.onLogin(this.state.username);\n  //  this.setState({\n  //    isLoggedIn: true,\n  //  });\n  //};\n\n  //onStartCallClicked = () => {\n  //  this.props.startCall(this.state.username, this.state.userToCall);\n  //};\n\n  renderVideos = () => {\n    return (\n      <div className={classnames(\"videos\", { active: this.state.isLoggedIn })}>\n        <div>\n          <label>{this.state.username}</label>\n\n          <video ref={this.props.setLocalVideoRef} autoPlay playsInline></video>\n        </div>\n        <div>\n          <label>{this.props.connectedUser}</label>\n          <video\n            ref={this.props.setRemoteVideoRef}\n            autoPlay\n            playsInline\n          ></video>\n        </div>\n        <div>\n          <label>{this.props.connectedUser2}</label>\n          <video\n            ref={this.props.setRemoteVideoRef2}\n            autoPlay\n            playsInline\n          ></video>\n        </div>\n      </div>\n    );\n  };\n\n  renderForms = () => {\n    return this.state.isLoggedIn ? (\n      <div key=\"a\" className=\"form\">\n        <label>Call to</label>\n        <input\n          value={this.state.userToCall}\n          type=\"text\"\n          onChange={(e) => this.setState({ userToCall: e.target.value })}\n        />\n        <button\n          onClick={this.onStartCallClicked}\n          id=\"call-btn\"\n          className=\"btn btn-primary\"\n        >\n          Call\n        </button>\n      </div>\n    ) : (\n      <div key=\"b\" className=\"form\">\n        <label>Type a name</label>\n        <input\n          value={this.state.username}\n          type=\"text\"\n          onChange={(e) => this.setState({ username: e.target.value })}\n        />\n\n        <button\n          //onClick={this.onLoginClicked}\n          id=\"login-btn\"\n          className=\"btn btn-primary\"\n        >\n          Login\n        </button>\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <section id=\"container\">\n        {this.props.connectedUser ? null : this.renderForms()}\n\n        {this.renderVideos()}\n      </section>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport {\n  createOffer,\n  initiateConnection,\n  startCall,\n  sendAnswer,\n  addCandidate,\n  initiateLocalStream,\n  listenToConnectionEvents,\n} from \"./modules/RTCModule\";\nimport firebase from \"firebase/app\";\nimport \"firebase/database\";\nimport config from \"./config\";\nimport {\n  doOffer,\n  doAnswer,\n  doLogin,\n  doCandidate,\n  removeNotifs,\n} from \"./modules/FirebaseModule\";\nimport \"webrtc-adapter\";\nimport VideoChat from \"./VideoChat\";\n\nclass VideoChatContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      database: null,\n      connectedUser: null,\n      connectedUser2: null,\n      connectedUser3: null,\n      localStream: null,\n      localStreamSet: null,\n      localConnectionSet: null,\n      localConnection: null,\n      username: this.props.username,\n      team: this.props.team,\n      counter: 0,\n      calling: false,\n    };\n    this.localVideoRef = React.createRef();\n    //this.localVideoRef2 = React.createRef();\n    //this.localVideoRef3 = React.createRef();\n    //this.localVideoRef4 = React.createRef();\n    this.remoteVideoRef = React.createRef();\n    this.remoteVideoRef2 = React.createRef();\n    this.remoteVideoRef3 = React.createRef();\n    this.remoteVideoRef4 = React.createRef();\n  }\n\n  componentDidMount = async () => {\n    // getting local video stream\n    console.log(\"In component did mount\");\n\n    console.log(this.state.username);\n\n    const localStream1 = await initiateLocalStream();\n    const localStream2 = await initiateLocalStream();\n    const localStream3 = await initiateLocalStream();\n    const localStream4 = await initiateLocalStream();\n\n    const localStreamSet = [\n      localStream1,\n      localStream2,\n      localStream3,\n      localStream4,\n    ];\n\n    const localConnectionSet = await initiateConnection();\n\n    console.log(localConnectionSet[0]);\n\n    const localConnection = localConnectionSet[this.state.counter];\n\n    const localStream = localStreamSet[this.state.counter];\n\n    this.localVideoRef.srcObject = localStreamSet[0];\n    //this.localVideoRef2.srcObject = localStreamSet[1];\n    //this.localVideoRef3.srcObject = localStreamSet[2];\n    //this.localVideoRef4.srcObject = localStreamSet[3];\n\n    this.setState({\n      database: firebase.database(),\n      localStream,\n      localStreamSet,\n      localConnectionSet,\n      localConnection,\n    });\n\n    await this.onLogin(this.state.username);\n\n    const team = this.state.team;\n\n    if (team.length !== 0) {\n      this.startCall(this.state.username, team[0]);\n    }\n  };\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.state.database !== nextState.database) {\n      return false;\n    }\n    if (this.state.localStream !== nextState.localStream) {\n      return false;\n    }\n    if (this.state.localConnection !== nextState.localConnection) {\n      return false;\n    }\n\n    return true;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(\"In component did update\");\n\n    const counter = this.state.counter;\n    console.log(counter);\n    const team = this.state.team;\n    const localConnectionSet = this.state.localConnectionSet;\n    const localStreamSet = this.state.localStreamSet;\n\n    if (prevState.counter !== counter) {\n      console.log(\"changing connection and stream\");\n      console.log(\"previous connection\");\n      console.log(this.state.localConnection);\n      console.log(this.state.localStream);\n      var localConn = localConnectionSet[counter];\n      var localStr = localStreamSet[counter];\n      console.log(\"new connection\");\n      console.log(localConn);\n      console.log(localStr);\n      this.setState({ localConnection: localConn });\n      this.setState({ localStream: localStr });\n      console.log(\"checking state 1\");\n      console.log(this.state.localConnection);\n      console.log(this.state.localStream);\n    }\n\n    if (prevState.counter !== counter && counter < team.length) {\n      console.log(\"will be connecting to new user\");\n      this.setState({ calling: true }, function () {\n        console.log(\"async setstate\");\n        this.startCall(this.state.username, team[counter]);\n      });\n    }\n  }\n\n  startCall = async (username, userToCall) => {\n    console.log(\"In starting call\");\n    this.setState({ calling: true });\n\n    const { database } = this.state;\n    var localConnection = this.state.localConnection;\n    var localStream = this.state.localStream;\n    var counter = this.state.counter;\n    console.log(\"next is counter\");\n    console.log(counter);\n    // listenToConnectionEvents(\n    //   localConnection,\n    //   username,\n    //   userToCall,\n    //   database,\n    //   this.remoteVideoRef,\n    //   doCandidate\n    // );\n\n    if (counter === 0) {\n      console.log(\"number 1\");\n      console.log(localConnection);\n      console.log(\"number 1\");\n      console.log(this.remoteVideoRef);\n      console.log(\"number 1\");\n      console.log(doCandidate);\n      console.log(\"number 1\");\n      listenToConnectionEvents(\n        localConnection,\n        username,\n        userToCall,\n        database,\n        this.remoteVideoRef,\n        doCandidate\n      );\n    }\n    if (counter === 1) {\n      listenToConnectionEvents(\n        localConnection,\n        username,\n        userToCall,\n        database,\n        this.remoteVideoRef2,\n        doCandidate\n      );\n    }\n    if (counter === 2) {\n      listenToConnectionEvents(\n        localConnection,\n        username,\n        userToCall,\n        database,\n        this.remoteVideoRef3,\n        doCandidate\n      );\n    }\n\n    console.log(localConnection);\n\n    // create an offer\n\n    createOffer(\n      localConnection,\n      localStream,\n      userToCall,\n      doOffer,\n      database,\n      username\n    );\n  };\n\n  onLogin = async (username) => {\n    console.log(\"In onlogin\");\n    return await doLogin(username, this.state.database, this.handleUpdate);\n  };\n\n  setLocalVideoRef = (ref) => {\n    console.log(\"In setlocalvideoref\");\n    this.localVideoRef = ref;\n  };\n\n  setRemoteVideoRef = (ref) => {\n    console.log(\"In setremotevideoref\");\n    this.remoteVideoRef = ref;\n  };\n\n  setRemoteVideoRef2 = (ref) => {\n    console.log(\"In setremotevideoref2\");\n    this.remoteVideoRef2 = ref;\n  };\n\n  handleUpdate = (notif, username) => {\n    console.log(\"In handleupdate\");\n    const { localConnection, database, localStream } = this.state;\n    var counter = this.state.counter;\n    var calling = this.state.calling;\n    const user = this.state.username;\n    const called = this.state.called;\n    const connectedUser = this.state.connectedUser;\n    const connectedUser2 = this.state.connectedUser2;\n\n    console.log(connectedUser);\n\n    if (notif) {\n      switch (notif.type) {\n        case \"offer\":\n          console.log(\"case offer\");\n\n          if (counter === 0) {\n            this.setState({\n              connectedUser: notif.from,\n            });\n\n            listenToConnectionEvents(\n              localConnection,\n              username,\n              notif.from,\n              database,\n              this.remoteVideoRef,\n              doCandidate\n            );\n          }\n\n          if (counter === 1) {\n            this.setState({\n              connectedUser2: notif.from,\n            });\n\n            listenToConnectionEvents(\n              localConnection,\n              username,\n              notif.from,\n              database,\n              this.remoteVideoRef2,\n              doCandidate\n            );\n          }\n\n          sendAnswer(\n            localConnection,\n            localStream,\n            notif,\n            doAnswer,\n            database,\n            username\n          );\n\n          this.setState({ called: \"CALLED\" });\n\n          break;\n        case \"answer\":\n          console.log(\"case answer\");\n\n          if (counter === 0) {\n            this.setState({\n              connectedUser: notif.from,\n            });\n          }\n\n          if (counter === 1) {\n            this.setState({\n              connectedUser2: notif.from,\n            });\n          }\n\n          startCall(localConnection, notif);\n          break;\n        case \"candidate\":\n          console.log(\"case candidate\");\n          addCandidate(localConnection, notif);\n          if (calling === true) {\n            this.setState({ calling: false });\n            if (counter === 0) {\n              removeNotifs(database, user, connectedUser);\n            }\n            if (counter === 1) {\n              removeNotifs(database, user, connectedUser2);\n            }\n            counter = counter + 1;\n            this.setState({ counter });\n          }\n          if (called === \"CALLED8\") {\n            this.setState({ called: \"\" });\n            counter = counter + 1;\n            this.setState({ counter });\n          }\n          if (called === \"CALLED7\") {\n            this.setState({ called: \"CALLED8\" });\n          }\n          if (called === \"CALLED6\") {\n            this.setState({ called: \"CALLED7\" });\n          }\n          if (called === \"CALLED5\") {\n            this.setState({ called: \"CALLED6\" });\n          }\n          if (called === \"CALLED4\") {\n            if (counter === 1) {\n              if (\n                connectedUser2.substring(0, connectedUser2.length - 6) ===\n                user.substring(0, user.length - 6)\n              ) {\n                this.setState({ called: \"\" });\n                counter = counter + 1;\n                this.setState({ counter });\n              } else {\n                this.setState({ called: \"CALLED5\" });\n              }\n            }\n            if (counter === 0) {\n              if (\n                connectedUser.substring(0, connectedUser.length - 6) ===\n                user.substring(0, user.length - 6)\n              ) {\n                this.setState({ called: \"\" });\n                counter = counter + 1;\n                this.setState({ counter });\n              } else {\n                this.setState({ called: \"CALLED5\" });\n              }\n            }\n          }\n          if (called === \"CALLED3\") {\n            this.setState({ called: \"CALLED4\" });\n          }\n          if (called === \"CALLED2\") {\n            this.setState({ called: \"CALLED3\" });\n          }\n          if (called === \"CALLED\") {\n            this.setState({ called: \"CALLED2\" });\n          }\n          break;\n        default:\n          break;\n      }\n    }\n  };\n\n  render() {\n    return (\n      <VideoChat\n        startCall={this.startCall}\n        onLogin={this.onLogin}\n        setLocalVideoRef={this.setLocalVideoRef}\n        setRemoteVideoRef={this.setRemoteVideoRef}\n        setRemoteVideoRef2={this.setRemoteVideoRef2}\n        connectedUser={this.state.connectedUser}\n        connectedUser2={this.state.connectedUser2}\n        username={this.state.username}\n        team={this.state.team}\n      />\n    );\n  }\n}\n\nexport default VideoChatContainer;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport VideoChatContainer from \"./VideoChatContainer\";\nimport firebase from \"firebase/app\";\nimport config from \"./config\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      retreivedData: false, //probing end of componentDidMount\n      user: \"\", //ip address\n      active: -2, //-2 for no activity; -1 is not in a room, 0 is new room, otherwise room number + 1\n      busy: false, //boolean for whether in Teams meeting or not\n      roomname: \"\",\n      team: [],\n\n      rooms: [], //list of rooms and their IDs, which is their index within the array\n      room_users: [], //entry of ip address and room IDs +1\n    };\n\n    fetch(\"https://api.ipify.org?format=jsonp?callback=?\", {\n      method: \"GET\",\n      headers: {},\n    })\n      .then((res) => {\n        return res.text();\n      })\n      .then((ip) => {\n        const rand = Math.floor(Math.random() * 1000) + 10000;\n        const yip = ip.split(\".\").join(\"\");\n        this.setState({ user: yip + rand });\n        console.log(this.state.user);\n      });\n  }\n\n  componentDidMount = async () => {\n    //component mounts, only after the first render on the client side\n    console.log(\"COMPONENT DID MOUNT\");\n\n    firebase.initializeApp(config);\n\n    //this.writeUserData();\n\n    await this.getUserData();\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    //before completion of componentDidMount\n    if (this.state.retreivedData === false) {\n      return;\n    }\n\n    //after completion of componentDidMount\n    if (this.state.retreivedData === true) {\n      console.log(\"COMPONENT DID UPDATE\");\n      if (prevState !== this.state) {\n        this.writeUserData();\n      }\n    }\n  }\n\n  writeUserData = () => {\n    //save the state\n    console.log(\"SAVING DATA\");\n\n    firebase.database().ref(\"/rooms\").set(this.state.rooms);\n    firebase.database().ref(\"/roomusers\").set(this.state.room_users);\n  };\n\n  async getUserData() {\n    //retrieve data from firebase\n    console.log(\"RETREIVING DATA\");\n\n    await firebase\n      .database()\n      .ref(\"rooms\")\n      .once(\"value\")\n      .then((snapshot) => {\n        this.gotRooms(snapshot);\n      });\n\n    await firebase\n      .database()\n      .ref(\"roomusers\")\n      .once(\"value\")\n      .then((snapshot) => {\n        this.gotRoomUsers(snapshot);\n      });\n\n    this.setState({ retreivedData: true });\n  }\n\n  gotRooms(data) {\n    console.log(\"GOT ROOMS\");\n\n    const temp_rooms = data.val();\n    const parsed_rooms = Object.keys(temp_rooms).map((room) => {\n      return { id: temp_rooms[room].id };\n    });\n\n    this.setState({ rooms: parsed_rooms });\n  }\n\n  gotRoomUsers(data) {\n    console.log(\"GOT ROOMUSERS\");\n\n    const temp_roomusers = data.val();\n    const parsed_roomusers = Object.keys(temp_roomusers).map((roomuser) => {\n      return {\n        ip: temp_roomusers[roomuser].ip,\n        room: temp_roomusers[roomuser].room,\n      };\n    });\n\n    this.setState({ room_users: parsed_roomusers });\n  }\n\n  errData = (err) => {\n    console.log(\"GOT AN ERROR\");\n\n    console.log(err);\n  };\n\n  nameNewRoom = () => {\n    console.log(\"NAMING NEW ROOM\");\n    this.setState({ active: 0 });\n  };\n\n  enterRoom = (room) => {\n    console.log(\"ENTERING ROOM\" + room.id);\n\n    const temp_roomusers = this.state.room_users;\n\n    temp_roomusers.push({ ip: this.state.user, room: room.id });\n\n    this.setState({ room_users: temp_roomusers });\n\n    this.setState({ active: room.id + 1 });\n    this.findTeam(room.id);\n  };\n\n  authenticateUser = () => {\n    console.log(\"AUTHENTICATING USER\");\n    this.setState({ active: -1 });\n  };\n\n  constructRoom = () => {\n    console.log(\"CREATING ROOM\");\n\n    const temp_rooms = this.state.rooms;\n\n    temp_rooms.push({ id: temp_rooms.length });\n    this.setState({ rooms: temp_rooms });\n\n    const temp_roomusers = this.state.room_users;\n\n    temp_roomusers.push({ ip: this.state.user, room: temp_rooms.length - 1 });\n\n    this.setState({ room_users: temp_roomusers });\n\n    this.setState({ active: temp_rooms.length });\n    this.findTeam(temp_rooms.length - 1);\n  };\n\n  findTeam = (id) => {\n    console.log(id);\n    const room_users = this.state.room_users;\n    const team = [];\n\n    for (let roomuser of room_users) {\n      if (roomuser.room === id && roomuser.ip !== this.state.user) {\n        console.log(roomuser.ip);\n        team.push(roomuser.ip);\n      }\n    }\n\n    console.log(team);\n\n    this.setState({ team });\n  };\n\n  leaveRoom = () => {\n    console.log(\"LEAVING ROOM\");\n\n    const room_users = this.state.room_users;\n    const user = this.state.user;\n\n    var filteredru = room_users.filter(function (value, index, arr) {\n      if (value.ip !== user) {\n        return value;\n      }\n    });\n\n    this.setState({ room_users: filteredru });\n    this.setState({ team: [] });\n    this.setState({ active: -1 });\n  };\n\n  render() {\n    const { rooms } = this.state;\n    const { room_users } = this.state;\n    const { active } = this.state;\n\n    if (active === -2) {\n      return (\n        <React.Fragment>\n          <div className=\"container-fluid\">\n            <div className=\"row align-items-center bg-primary\">\n              <div className=\"col-xl-12\">\n                <h1 className=\"display-1 text-center\">myWorkplace</h1>\n              </div>\n              <div className=\"col-xl-12\">\n                <p className=\"text-center text-light\">\n                  myWorkplace is a prototype application intended to facilitate\n                  more spontanenous virtual conversations.\n                </p>\n              </div>\n            </div>\n\n            <div className=\"row mt-5\"></div>\n\n            <div className=\"row d-flex justify-content-around\">\n              <button\n                onClick={() => this.authenticateUser()}\n                className=\"btn btn-primary\"\n              >\n                Click to enter myWorkplace\n              </button>\n            </div>\n          </div>\n        </React.Fragment>\n      );\n    }\n\n    if (active === -1) {\n      return (\n        <React.Fragment>\n          <div className=\"container-fluid\">\n            <div className=\"row align-items-center bg-primary\">\n              <div className=\"col-xl-12\">\n                <h1 className=\"display-1 text-center\">myWorkplace</h1>\n              </div>\n              <div className=\"col-xl-12\">\n                <p className=\"text-center text-light\">\n                  myWorkplace is a prototype application intended to facilitate\n                  more spontanenous virtual conversations.\n                </p>\n              </div>\n            </div>\n\n            <div className=\"row mt-5\"></div>\n\n            <div className=\"row d-flex justify-content-around\">\n              {rooms.map((room) => (\n                <div className=\"col-sm-4 d-flex justify-content-around\">\n                  <div\n                    key={room.id + 1}\n                    style={{\n                      width: \"18rem\",\n                      marginRight: \"1rem\",\n                      textAlign: \"center\",\n                    }}\n                  >\n                    <div className=\"card-body\">\n                      <h5 className=\"card-title\">{room.id + 1}</h5>\n                      <p className=\"card-text\">List users here</p>\n                      <button\n                        onClick={() => this.enterRoom(room)}\n                        className=\"btn btn-link\"\n                      >\n                        Enter room\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n\n            <div className=\"row mt-5\"></div>\n\n            <div className=\"row d-flex justify-content-around\">\n              <button\n                onClick={() => this.constructRoom()}\n                className=\"btn btn-primary\"\n              >\n                Create New Room\n              </button>\n            </div>\n          </div>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <div className=\"container-fluid\">\n          <div className=\"row align-items-center bg-primary\">\n            <div className=\"col-xl-12\">\n              <h1 className=\"display-1 text-center\">myWorkplace</h1>\n            </div>\n            <div className=\"col-xl-12\">\n              <p className=\"text-center text-light\">\n                myWorkplace is a prototype application intended to facilitate\n                more spontanenous virtual conversations.\n              </p>\n            </div>\n          </div>\n\n          <div className=\"row mt-5\"></div>\n\n          <div className=\"row d-flex justify-content-around\">\n            In room {active}\n          </div>\n\n          <div className=\"row mt-5\"></div>\n\n          <VideoChatContainer\n            username={this.state.user}\n            team={this.state.team}\n          />\n\n          <div className=\"row mt-5\"></div>\n\n          <div className=\"row d-flex justify-content-around\">\n            <button\n              onClick={() => this.leaveRoom()}\n              className=\"btn btn-primary\"\n            >\n              Leave room {active}\n            </button>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n\n    //return (\n    //  <div className=\"app\">\n    //    <h1>React Video Chat App</h1>\n    //    <h2>WebRTC + Firebase</h2>\n    //    <VideoChatContainer />\n    //  </div>\n    //);\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}