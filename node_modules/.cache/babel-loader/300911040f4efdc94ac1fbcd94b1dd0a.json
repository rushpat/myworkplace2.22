{"ast":null,"code":"var _jsxFileName = \"/Users/rushipat/Documents/Data/Programs/videochatapp/src/VideoChatContainer.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport { createOffer, initiateConnection, startCall, sendAnswer, addCandidate, initiateLocalStream, listenToConnectionEvents } from \"./modules/RTCModule\";\nimport firebase from \"firebase/app\";\nimport \"firebase/database\";\nimport config from \"./config\";\nimport { doOffer, doAnswer, doLogin, doCandidate, removeNotifs } from \"./modules/FirebaseModule\";\nimport \"webrtc-adapter\";\nimport VideoChat from \"./VideoChat\";\n\nclass VideoChatContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      // getting local video stream\n      console.log(\"In component did mount\");\n      console.log(this.state.username);\n      const localStream1 = await initiateLocalStream();\n      const localStream2 = await initiateLocalStream();\n      const localStream3 = await initiateLocalStream();\n      const localStream4 = await initiateLocalStream();\n      const localStreamSet = [localStream1, localStream2, localStream3, localStream4];\n      const localConnectionSet = await initiateConnection();\n      console.log(localConnectionSet[0]);\n      const localConnection = localConnectionSet[this.state.counter];\n      const localStream = localStreamSet[this.state.counter];\n      this.localVideoRef.srcObject = localStreamSet[0]; //this.localVideoRef2.srcObject = localStreamSet[1];\n      //this.localVideoRef3.srcObject = localStreamSet[2];\n      //this.localVideoRef4.srcObject = localStreamSet[3];\n\n      this.setState({\n        database: firebase.database(),\n        localStream,\n        localStreamSet,\n        localConnectionSet,\n        localConnection\n      });\n      await this.onLogin(this.state.username);\n      const team = this.state.team;\n\n      if (team.length !== 0) {\n        this.startCall(this.state.username, team[0]);\n      }\n    };\n\n    this.startCall = async (username, userToCall) => {\n      console.log(\"In starting call\");\n      this.setState({\n        calling: true\n      });\n      const _this$state = this.state,\n            localConnection = _this$state.localConnection,\n            database = _this$state.database,\n            localStream = _this$state.localStream;\n      var counter = this.state;\n      listenToConnectionEvents(localConnection, username, userToCall, database, this.remoteVideoRef, doCandidate); // create an offer\n\n      createOffer(localConnection, localStream, userToCall, doOffer, database, username);\n    };\n\n    this.onLogin = async username => {\n      console.log(\"In onlogin\");\n      return await doLogin(username, this.state.database, this.handleUpdate);\n    };\n\n    this.setLocalVideoRef = ref => {\n      console.log(\"In setlocalvideoref\");\n      this.localVideoRef = ref;\n    };\n\n    this.setRemoteVideoRef = ref => {\n      console.log(\"In setremotevideoref\");\n      this.remoteVideoRef = ref;\n    };\n\n    this.handleUpdate = (notif, username) => {\n      console.log(\"In handleupdate\");\n      const _this$state2 = this.state,\n            localConnection = _this$state2.localConnection,\n            database = _this$state2.database,\n            localStream = _this$state2.localStream;\n      var counter = this.state.counter;\n      var calling = this.state.calling;\n      const user = this.state.username;\n      const called = this.state.called;\n      const connectedUser = this.state.connectedUser;\n      console.log(connectedUser);\n\n      if (notif) {\n        switch (notif.type) {\n          case \"offer\":\n            console.log(\"case offer\");\n            this.setState({\n              connectedUser: notif.from\n            });\n            listenToConnectionEvents(localConnection, username, notif.from, database, this.remoteVideoRef, doCandidate);\n            sendAnswer(localConnection, localStream, notif, doAnswer, database, username);\n            this.setState({\n              called: \"CALLED\"\n            });\n            break;\n\n          case \"answer\":\n            console.log(\"case answer\");\n            this.setState({\n              connectedUser: notif.from\n            });\n            startCall(localConnection, notif);\n            break;\n\n          case \"candidate\":\n            console.log(\"case candidate\");\n            addCandidate(localConnection, notif);\n\n            if (calling === true) {\n              this.setState({\n                calling: false\n              });\n              removeNotifs(database, user, connectedUser);\n              counter = counter + 1;\n              this.setState({\n                counter\n              });\n            }\n\n            if (called === \"CALLED4\") {\n              this.setState({\n                called: \"\"\n              });\n              counter = counter + 1;\n              this.setState({\n                counter\n              });\n            }\n\n            if (called === \"CALLED3\") {\n              this.setState({\n                called: \"CALLED4\"\n              });\n            }\n\n            if (called === \"CALLED2\") {\n              this.setState({\n                called: \"CALLED3\"\n              });\n            }\n\n            if (called === \"CALLED\") {\n              this.setState({\n                called: \"CALLED2\"\n              });\n            }\n\n            break;\n\n          default:\n            break;\n        }\n      }\n    };\n\n    this.state = {\n      database: null,\n      connectedUser: null,\n      localStream: null,\n      localStreamSet: null,\n      localConnectionSet: null,\n      localConnection: null,\n      username: this.props.username,\n      team: this.props.team,\n      counter: 0,\n      calling: false\n    };\n    this.localVideoRef = React.createRef();\n    this.localVideoRef2 = React.createRef();\n    this.localVideoRef3 = React.createRef();\n    this.localVideoRef4 = React.createRef();\n    this.remoteVideoRef = React.createRef();\n    this.remoteVideoRef2 = React.createRef();\n    this.remoteVideoRef3 = React.createRef();\n    this.remoteVideoRef4 = React.createRef();\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.state.database !== nextState.database) {\n      return false;\n    }\n\n    if (this.state.localStream !== nextState.localStream) {\n      return false;\n    }\n\n    if (this.state.localConnection !== nextState.localConnection) {\n      return false;\n    }\n\n    return true;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(\"In component did update\");\n    const counter = this.state.counter;\n    console.log(counter);\n    const team = this.state.team;\n    const localConnectionSet = this.state.localConnectionSet;\n    const localStreamSet = this.state.localStreamSet;\n\n    if (prevState.counter !== counter) {\n      console.log(\"changing connection and stream\");\n      const localConnection = localConnectionSet[counter];\n      const localStream = localStreamSet[counter];\n      this.setState({\n        localConnection\n      });\n      this.setState({\n        localStream\n      });\n    }\n\n    if (prevState.counter !== counter && counter < team.length) {\n      console.log(\"will be connecting to new user\");\n      this.startCall(this.state.username, team[counter]);\n    }\n  }\n\n  render() {\n    return React.createElement(VideoChat, {\n      startCall: this.startCall,\n      onLogin: this.onLogin,\n      setLocalVideoRef: this.setLocalVideoRef,\n      setRemoteVideoRef: this.setRemoteVideoRef,\n      connectedUser: this.state.connectedUser,\n      username: this.state.username,\n      team: this.state.team,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default VideoChatContainer;","map":{"version":3,"sources":["/Users/rushipat/Documents/Data/Programs/videochatapp/src/VideoChatContainer.js"],"names":["React","createOffer","initiateConnection","startCall","sendAnswer","addCandidate","initiateLocalStream","listenToConnectionEvents","firebase","config","doOffer","doAnswer","doLogin","doCandidate","removeNotifs","VideoChat","VideoChatContainer","Component","constructor","props","componentDidMount","console","log","state","username","localStream1","localStream2","localStream3","localStream4","localStreamSet","localConnectionSet","localConnection","counter","localStream","localVideoRef","srcObject","setState","database","onLogin","team","length","userToCall","calling","remoteVideoRef","handleUpdate","setLocalVideoRef","ref","setRemoteVideoRef","notif","user","called","connectedUser","type","from","createRef","localVideoRef2","localVideoRef3","localVideoRef4","remoteVideoRef2","remoteVideoRef3","remoteVideoRef4","shouldComponentUpdate","nextProps","nextState","componentDidUpdate","prevProps","prevState","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport {\n  createOffer,\n  initiateConnection,\n  startCall,\n  sendAnswer,\n  addCandidate,\n  initiateLocalStream,\n  listenToConnectionEvents,\n} from \"./modules/RTCModule\";\nimport firebase from \"firebase/app\";\nimport \"firebase/database\";\nimport config from \"./config\";\nimport {\n  doOffer,\n  doAnswer,\n  doLogin,\n  doCandidate,\n  removeNotifs,\n} from \"./modules/FirebaseModule\";\nimport \"webrtc-adapter\";\nimport VideoChat from \"./VideoChat\";\n\nclass VideoChatContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      database: null,\n      connectedUser: null,\n      localStream: null,\n      localStreamSet: null,\n      localConnectionSet: null,\n      localConnection: null,\n      username: this.props.username,\n      team: this.props.team,\n      counter: 0,\n      calling: false,\n    };\n    this.localVideoRef = React.createRef();\n    this.localVideoRef2 = React.createRef();\n    this.localVideoRef3 = React.createRef();\n    this.localVideoRef4 = React.createRef();\n    this.remoteVideoRef = React.createRef();\n    this.remoteVideoRef2 = React.createRef();\n    this.remoteVideoRef3 = React.createRef();\n    this.remoteVideoRef4 = React.createRef();\n  }\n\n  componentDidMount = async () => {\n    // getting local video stream\n    console.log(\"In component did mount\");\n\n    console.log(this.state.username);\n\n    const localStream1 = await initiateLocalStream();\n    const localStream2 = await initiateLocalStream();\n    const localStream3 = await initiateLocalStream();\n    const localStream4 = await initiateLocalStream();\n\n    const localStreamSet = [\n      localStream1,\n      localStream2,\n      localStream3,\n      localStream4,\n    ];\n\n    const localConnectionSet = await initiateConnection();\n\n    console.log(localConnectionSet[0]);\n\n    const localConnection = localConnectionSet[this.state.counter];\n\n    const localStream = localStreamSet[this.state.counter];\n\n    this.localVideoRef.srcObject = localStreamSet[0];\n    //this.localVideoRef2.srcObject = localStreamSet[1];\n    //this.localVideoRef3.srcObject = localStreamSet[2];\n    //this.localVideoRef4.srcObject = localStreamSet[3];\n\n    this.setState({\n      database: firebase.database(),\n      localStream,\n      localStreamSet,\n      localConnectionSet,\n      localConnection,\n    });\n\n    await this.onLogin(this.state.username);\n\n    const team = this.state.team;\n\n    if (team.length !== 0) {\n      this.startCall(this.state.username, team[0]);\n    }\n  };\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.state.database !== nextState.database) {\n      return false;\n    }\n    if (this.state.localStream !== nextState.localStream) {\n      return false;\n    }\n    if (this.state.localConnection !== nextState.localConnection) {\n      return false;\n    }\n\n    return true;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(\"In component did update\");\n\n    const counter = this.state.counter;\n    console.log(counter);\n    const team = this.state.team;\n    const localConnectionSet = this.state.localConnectionSet;\n    const localStreamSet = this.state.localStreamSet;\n\n    if (prevState.counter !== counter) {\n      console.log(\"changing connection and stream\");\n      const localConnection = localConnectionSet[counter];\n      const localStream = localStreamSet[counter];\n      this.setState({ localConnection });\n      this.setState({ localStream });\n    }\n\n    if (prevState.counter !== counter && counter < team.length) {\n      console.log(\"will be connecting to new user\");\n      this.startCall(this.state.username, team[counter]);\n    }\n  }\n\n  startCall = async (username, userToCall) => {\n    console.log(\"In starting call\");\n    this.setState({ calling: true });\n\n    const { localConnection, database, localStream } = this.state;\n    var counter = this.state;\n\n    listenToConnectionEvents(\n      localConnection,\n      username,\n      userToCall,\n      database,\n      this.remoteVideoRef,\n      doCandidate\n    );\n    // create an offer\n    createOffer(\n      localConnection,\n      localStream,\n      userToCall,\n      doOffer,\n      database,\n      username\n    );\n  };\n\n  onLogin = async (username) => {\n    console.log(\"In onlogin\");\n    return await doLogin(username, this.state.database, this.handleUpdate);\n  };\n\n  setLocalVideoRef = (ref) => {\n    console.log(\"In setlocalvideoref\");\n    this.localVideoRef = ref;\n  };\n\n  setRemoteVideoRef = (ref) => {\n    console.log(\"In setremotevideoref\");\n    this.remoteVideoRef = ref;\n  };\n\n  handleUpdate = (notif, username) => {\n    console.log(\"In handleupdate\");\n    const { localConnection, database, localStream } = this.state;\n    var counter = this.state.counter;\n    var calling = this.state.calling;\n    const user = this.state.username;\n    const called = this.state.called;\n    const connectedUser = this.state.connectedUser;\n    console.log(connectedUser);\n\n    if (notif) {\n      switch (notif.type) {\n        case \"offer\":\n          console.log(\"case offer\");\n          this.setState({\n            connectedUser: notif.from,\n          });\n\n          listenToConnectionEvents(\n            localConnection,\n            username,\n            notif.from,\n            database,\n            this.remoteVideoRef,\n            doCandidate\n          );\n\n          sendAnswer(\n            localConnection,\n            localStream,\n            notif,\n            doAnswer,\n            database,\n            username\n          );\n\n          this.setState({ called: \"CALLED\" });\n\n          break;\n        case \"answer\":\n          console.log(\"case answer\");\n          this.setState({\n            connectedUser: notif.from,\n          });\n          startCall(localConnection, notif);\n          break;\n        case \"candidate\":\n          console.log(\"case candidate\");\n          addCandidate(localConnection, notif);\n          if (calling === true) {\n            this.setState({ calling: false });\n            removeNotifs(database, user, connectedUser);\n            counter = counter + 1;\n            this.setState({ counter });\n          }\n          if (called === \"CALLED4\") {\n            this.setState({ called: \"\" });\n            counter = counter + 1;\n            this.setState({ counter });\n          }\n          if (called === \"CALLED3\") {\n            this.setState({ called: \"CALLED4\" });\n          }\n          if (called === \"CALLED2\") {\n            this.setState({ called: \"CALLED3\" });\n          }\n          if (called === \"CALLED\") {\n            this.setState({ called: \"CALLED2\" });\n          }\n          break;\n        default:\n          break;\n      }\n    }\n  };\n\n  render() {\n    return (\n      <VideoChat\n        startCall={this.startCall}\n        onLogin={this.onLogin}\n        setLocalVideoRef={this.setLocalVideoRef}\n        setRemoteVideoRef={this.setRemoteVideoRef}\n        connectedUser={this.state.connectedUser}\n        username={this.state.username}\n        team={this.state.team}\n      />\n    );\n  }\n}\n\nexport default VideoChatContainer;\n"]},"metadata":{},"sourceType":"module"}